name: Flujo de trabajo para ejecutar los test
on:
  workflow_dispatch:
  push:
    branches: [ miu ]
  pull_request:
    branches: [ miu ]

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Construyendo  el c√≥digo
        run: |
          chmod +x gradlew        
          ./gradlew assemble
          echo 'uvus'
  test:
   runs-on: ubuntu-latest
   needs: Build
   env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
   steps:
   - name: Clonando el repositorio y estableciendo el espacio de trabajo
     uses: actions/checkout@v3
   - name: Probando el codigo
     run: |
          chmod +x gradlew
          ./gradlew test
          echo 'uvus'
  publish:
   runs-on: ubuntu-latest
   needs: test
   env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GGITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GGITHUB_TOKEN }}
   steps:
   - name: Clonando el repositorio y estableciendo el espacio de trabajo
     uses: actions/checkout@v3
   - name: Probando el codigo
     run: |
          chmod +x gradlew
          ./gradlew publish
          echo 'uvus'
     
   